function varargout = TAgui_combine_settingswindow(varargin)
% TAGUI_COMBINE_SETTINGSWINDOW Set parameters for scaling different parts
% of a spectrum that is to be combined to a single spectrum
%
% Normally, this window is called from the TAgui_combinewindow in context
% of the TAgui window.
%
% See also TAGUI, TAGUI_COMBINEWINDOW

% (c) 2012, Till Biskup
% 2012-01-20

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Construct the components
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Make GUI effectively a singleton
singleton = findobj('Tag','TAgui_combine_settingswindow');
if (singleton)
    figure(singleton);
    varargout{1} = singleton;
    return;
end

%  Construct the components
hMainFigure = figure('Tag','TAgui_combine_settingswindow',...
    'Visible','off',...
    'Name','TA GUI : Combine Settings Window',...
    'Units','Pixels',...
    'Position',[30,330,650,340],...
    'Resize','off',...
    'NumberTitle','off', ...
    'KeyPressFcn',@keypress_Callback,...
    'Menu','none','Toolbar','none');

defaultBackground = get(hMainFigure,'Color');
noneditableBackground = [0.92 0.92 0.92];
editableBackground = [1 1 1];
mainPanelWidth = 260;
guiSize = get(hMainFigure,'Position');
guiSize = guiSize([3,4]);

hPlotAxes = axes(...         % the axes for plotting selected plot
    'Tag','mainAxis',...
	'Parent', hMainFigure, ...
    'Box','on',...
    'XTick',[],...
    'YTick',[],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units', 'Pixels', ...
    'Position',[20 85 330 230]);


pp1 = uipanel('Tag','method_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[guiSize(1)-mainPanelWidth-20 guiSize(2)-75 mainPanelWidth 55],...
    'Title','Method & Factor'...
    );

pp2 = uipanel('Tag','settings_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[guiSize(1)-mainPanelWidth-20 guiSize(2)-255 mainPanelWidth 170],...
    'Title','Settings',...
    'Visible','On'...
    );

pp3 = uipanel('Tag','settings_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[guiSize(1)-mainPanelWidth-20 guiSize(2)-255 mainPanelWidth 170],...
    'Title','Settings',...
    'Visible','Off'...
    );

pp5 = uipanel('Tag','displaysettings_panel',...
    'Parent',hMainFigure,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[20 20 guiSize(1)-mainPanelWidth-60 55],...
    'Title','Display settings'...
    );


% ------------------------------------------------------------------------
% UI controls for pp1
uicontrol('Tag','method_panel_method_popupmenu',...
    'Style','popupmenu',...
    'Parent',pp1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 13 100 20],...
    'String','time avg|min(diff)',...
    'Value',1, ...
    'Callback',{@popupmenu_Callback,'scalingmethod'} ...
    );
uicontrol('Tag','method_panel_factor_edit',...
    'Style','edit',...
    'Parent',pp1,...
    'BackgroundColor',editableBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','center',...
    'Units','Pixels',...
    'Position',[120 10 mainPanelWidth-130 25],...
    'String','1.000000',...
    'TooltipString','Factor for scaling the two curves onto each other',...
    'Enable','on',...
    'Callback',{@edit_Callback,'factor'}...
    );

% ------------------------------------------------------------------------
% UI controls for pp2
pp2_p1 = uipanel('Tag','averagearea_panel',...
    'Parent',pp2,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 mainPanelWidth-20 140],...
    'Title','Average area'...
    );
uicontrol('Tag','averagearea_index_text',...
    'Style','text',...
    'Parent',pp2_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 90 (mainPanelWidth-90)/2 25],...
    'String','index'...
    );
uicontrol('Tag','averagearea_unit_text',...
    'Style','text',...
    'Parent',pp2_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(mainPanelWidth-90)/2 90 (mainPanelWidth-90)/2 25],...
    'String','unit'...
    );
uicontrol('Tag','average_start_text',...
    'Style','text',...
    'Parent',pp2_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','right',...
    'Units','Pixels',...
    'Position',[10 70 45 20],...
    'String','Start '...
    );
uicontrol('Tag','average_start_index_edit',...
    'Style','edit',...
    'Parent',pp2_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 70 (mainPanelWidth-90)/2 25],...
    'String','0',...
    'Callback',{@area_edit_Callback,'startindex'}...
    );
uicontrol('Tag','average_start_unit_edit',...
    'Style','edit',...
    'Parent',pp2_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(mainPanelWidth-90)/2 70 (mainPanelWidth-90)/2 25],...
    'String','0',...
    'Callback',{@area_edit_Callback,'startunit'}...
    );
uicontrol('Tag','average_stop_text',...
    'Style','text',...
    'Parent',pp2_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','right',...
    'Units','Pixels',...
    'Position',[10 40 45 20],...
    'String','Stop '...
    );
uicontrol('Tag','average_stop_index_edit',...
    'Style','edit',...
    'Parent',pp2_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 40 (mainPanelWidth-90)/2 25],...
    'String','0',...
    'Callback',{@area_edit_Callback,'stopindex'}...
    );
uicontrol('Tag','average_stop_unit_edit',...
    'Style','edit',...
    'Parent',pp2_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(mainPanelWidth-90)/2 40 (mainPanelWidth-90)/2 25],...
    'String','0',...
    'Callback',{@area_edit_Callback,'stopunit'}...
    );
uicontrol('Tag','average_draw_pushbutton',...
    'Style','pushbutton',...
    'Parent',pp2_p1,...
    'BackgroundColor',defaultBackground,...
    'Enable','on',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 10 (mainPanelWidth-90)/2 25],...
    'String','Draw',...
    'TooltipString','Draw area to average over',...
    'Callback',{@pushbutton_Callback,'averageDraw'}...
    );
uicontrol('Tag','average_clear_pushbutton',...
    'Style','pushbutton',...
    'Parent',pp2_p1,...
    'BackgroundColor',defaultBackground,...
    'Enable','on',...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(mainPanelWidth-90)/2 10 (mainPanelWidth-90)/2 25],...
    'String','Clear',...
    'TooltipString','Clear average area',...
    'Callback',{@pushbutton_Callback,'averageClear'}...
    );

% ------------------------------------------------------------------------
% UI controls for pp3
pp3_p1 = uipanel('Tag','settings_panel_smoothing_panel',...
    'Parent',pp3,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 70 mainPanelWidth-20 80],...
    'Title','Smoothing (running average)'...
    );
uicontrol('Tag','settings_panel_average_points_text',...
    'Style','text',...
    'Parent',pp3_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 30 (mainPanelWidth-90)/2 25],...
    'String','points'...
    );
uicontrol('Tag','settings_panel_average_unit_text',...
    'Style','text',...
    'Parent',pp3_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(mainPanelWidth-90)/2 30 (mainPanelWidth-90)/2 25],...
    'String','unit'...
    );
uicontrol('Tag','settings_panel_average_x_text',...
    'Style','text',...
    'Parent',pp3_p1,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[10 10 35 20],...
    'String','x'...
    );
uicontrol('Tag','settings_panel_average_x_points_edit',...
    'Style','edit',...
    'Parent',pp3_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60 10 (mainPanelWidth-90)/2 25],...
    'String','1',...
    'Callback',{@average_edit_Callback,'xindex'}...
    );
uicontrol('Tag','settings_panel_average_x_unit_edit',...
    'Style','edit',...
    'Parent',pp3_p1,...
    'BackgroundColor',[1 1 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'Units','Pixels',...
    'Position',[60+(mainPanelWidth-90)/2 10 (mainPanelWidth-90)/2 25],...
    'String','0',...
    'Callback',{@average_edit_Callback,'xunit'}...
    );

% ------------------------------------------------------------------------
% UI controls for pp5
uicontrol('Tag','display_panel_min_text',...
    'Style','text',...
    'Parent',pp5,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','right',...
    'Units','Pixels',...
    'Position',[10 10 35 20],...
    'String','Min '...
    );
uicontrol('Tag','display_panel_min_edit',...
    'Style','edit',...
    'Parent',pp5,...
    'BackgroundColor',editableBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','center',...
    'Units','Pixels',...
    'Position',[50 10 110 25],...
    'String','-0.00011',...
    'TooltipString','Minimum in z',...
    'Enable','on',...
    'Callback',{@edit_Callback,'min'}...
    );
uicontrol('Tag','display_panel_max_text',...
    'Style','text',...
    'Parent',pp5,...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','right',...
    'Units','Pixels',...
    'Position',[170 10 35 20],...
    'String','Max '...
    );
uicontrol('Tag','display_panel_max_edit',...
    'Style','edit',...
    'Parent',pp5,...
    'BackgroundColor',editableBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'HorizontalAlignment','center',...
    'Units','Pixels',...
    'Position',[210 10 110 25],...
    'String','0.00011',...
    'TooltipString','Maximum in z',...
    'Enable','on',...
    'Callback',{@edit_Callback,'max'}...
    );


% ------------------------------------------------------------------------
% UI controls for main window
uicontrol('Tag','zoom_togglebutton',...
    'Style','togglebutton',...
	'Parent', hMainFigure, ...
    'BackgroundColor',defaultBackground,...
    'ForegroundColor',[0 0 0],...
    'FontUnit','Pixel','Fontsize',12,...
    'FontWeight','bold',...
    'String','+',...
    'TooltipString','Zoom',...
    'pos',[guiSize(1)-mainPanelWidth-20 32 25 25],...
    'Enable','on',...
    'Callback',{@togglebutton_Callback,'Zoom'}...
    );
uicontrol('Tag','help_pushbutton',...
    'Style','pushbutton',...
	'Parent', hMainFigure, ...
    'BackgroundColor',defaultBackground,...
    'ForegroundColor',[0 0 1],...
    'FontUnit','Pixel','Fontsize',12,...
    'FontWeight','bold',...
    'String','?',...
    'TooltipString','Display help for how to operate the Combine GUI',...
    'pos',[guiSize(1)-mainPanelWidth+10 32 25 25],...
    'Enable','on',...
    'Callback',@TAgui_combine_helpwindow...
    );

uicontrol('Tag','apply_pushbutton',...
    'Style','pushbutton',...
	'Parent', hMainFigure, ...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','Apply',...
    'TooltipString','Combine selected datasets to new dataset',...
    'pos',[guiSize(1)-((mainPanelWidth)/3*2)-25 20 guiSize(1)-(mainPanelWidth*2)-40 50],...
    'Enable','on',...
    'Callback',{@pushbutton_Callback,'Apply'}...
    );
uicontrol('Tag','close_pushbutton',...
    'Style','pushbutton',...
	'Parent', hMainFigure, ...
    'BackgroundColor',defaultBackground,...
    'FontUnit','Pixel','Fontsize',12,...
    'String','Close',...
    'TooltipString','Close Combine GUI',...
    'pos',[guiSize(1)-((mainPanelWidth)/3)-20 20 (mainPanelWidth)/3+5 50],...
    'Enable','on',...
    'Callback',{@pushbutton_Callback,'Close'}...
    );

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Initialization tasks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Store handles in guidata
guidata(hMainFigure,guihandles);

% Create appdata structure
ad = guiDataStructure('guiappdatastructure');

% Combine - struct
ad.combine = struct();
ad.combine.spectra.notcombine = [];
ad.combine.spectra.combine = [];
ad.combine.label = '';

setappdata(hMainFigure,'data',ad.data);
setappdata(hMainFigure,'origdata',ad.origdata);
setappdata(hMainFigure,'configuration',ad.configuration);
setappdata(hMainFigure,'control',ad.control);
setappdata(hMainFigure,'combine',ad.combine);

% Load data from Main GUI
mainGuiWindow = guiGetWindowHandle();
if (mainGuiWindow)
    admain = getappdata(mainGuiWindow);
    % Check for availability of necessary fields in appdata
    if (isfield(admain,'data') ~= 0)
        ad.data = admain.data;
        setappdata(hMainFigure,'data',ad.data);
        ad.origdata = admain.data;
        setappdata(hMainFigure,'origdata',ad.origdata);
    end
    ad = getappdata(hMainFigure);
end

% Make the GUI visible.
set(hMainFigure,'Visible','on');
msgStr = 'combine GUI window opened';
add2status(msgStr);

if (nargout == 1)
    varargout{1} = hMainFigure;
end

% Add keypress function to every element that can have one...
handles = findall(...
    allchild(hMainFigure),'style','pushbutton',...
    '-or','style','togglebutton',...
    '-or','style','edit',...
    '-or','style','listbox',...
    '-or','style','popupmenu');
for m=1:length(handles)
    set(handles(m),'KeyPressFcn',@keypress_Callback);
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Callbacks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function edit_Callback(source,~,field)
    try
        if isempty(field)
            return;
        end
        
        % Get appdata of main window
        mainWindow = guiGetWindowHandle(mfilename);
        ad = getappdata(mainWindow);
        
        value = get(source,'String');
        
        switch field
            case 'label'
                ad.combine.label = value;
                setappdata(mainWindow,'combine',ad.combine);
                updateLabel();
            otherwise
                return;
        end
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            TAgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function pushbutton_Callback(~,~,action)
    try
        if isempty(action)
            return;
        end
        
        % Get appdata of main window
        mainWindow = guiGetWindowHandle(mfilename);
        ad = getappdata(mainWindow);
        
        % Get handles of main window
        gh = guihandles(mainWindow);

        switch action
            case 'Add basename'
                baseNames = get(gh.filebasename_listbox,'String');
                baseName = baseNames{get(gh.filebasename_listbox,'Value')};
                [~,fileBaseNames,~] = cellfun(@(x) fileparts(x.file.name),...
                    ad.data,'UniformOutput',false);
                toadd = find(strcmp(baseName,fileBaseNames));
                for k=1:length(toadd)
                    if any(ad.combine.spectra.notcombine==toadd(k))
                        ad.combine.spectra.notcombine(...
                            ad.combine.spectra.notcombine==toadd(k)) = [];
                    end
                    if ~any(ad.combine.spectra.combine==toadd(k))
                        ad.combine.spectra.combine(end+1) = toadd(k);
                    end
                end
                setappdata(mainWindow,'combine',ad.combine);
                updateSpectra();
                updateLabel();
            case 'Remove basename'
                baseNames = get(gh.filebasename_listbox,'String');
                baseName = baseNames{get(gh.filebasename_listbox,'Value')};
                [~,fileBaseNames,~] = cellfun(@(x) fileparts(x.file.name),...
                    ad.data,'UniformOutput',false);
                toremove = find(strcmp(baseName,fileBaseNames));
                for k=1:length(toremove)
                    if any(ad.combine.spectra.combine==toremove(k))
                        ad.combine.spectra.combine(...
                            ad.combine.spectra.combine==toremove(k)) = [];
                    end
                    if ~any(ad.combine.spectra.notcombine==toremove(k))
                        ad.combine.spectra.notcombine(end+1) = toremove(k);
                    end
                end
                setappdata(mainWindow,'combine',ad.combine);
                updateSpectra();
                updateLabel();
            case 'Add'
                toadd = ad.combine.spectra.notcombine(...
                    get(gh.notcombine_listbox,'Value'));
                for k=1:length(toadd)
                    if any(ad.combine.spectra.notcombine==toadd(k))
                        ad.combine.spectra.notcombine(...
                            ad.combine.spectra.notcombine==toadd(k)) = [];
                    end
                    if ~any(ad.combine.spectra.combine==toadd(k))
                        ad.combine.spectra.combine(end+1) = toadd(k);
                    end
                end
                setappdata(mainWindow,'combine',ad.combine);
                updateSpectra();
                updateLabel();
            case 'Remove'
                toremove = ad.combine.spectra.combine(...
                    get(gh.combine_listbox,'Value'));
                for k=1:length(toremove)
                    if any(ad.combine.spectra.combine==toremove(k))
                        ad.combine.spectra.combine(...
                            ad.combine.spectra.combine==toremove(k)) = [];
                    end
                    if ~any(ad.combine.spectra.notcombine==toremove(k))
                        ad.combine.spectra.notcombine(end+1) = toremove(k);
                    end
                end
                setappdata(mainWindow,'combine',ad.combine);
                updateSpectra();
                updateLabel();
            case 'Add all'
                ad.combine.spectra.combine = [...
                    ad.combine.spectra.combine ...
                    ad.combine.spectra.notcombine];
                ad.combine.spectra.notcombine = [];
                setappdata(mainWindow,'combine',ad.combine);
                updateSpectra();
                updateLabel();
            case 'Remove all'
                ad.combine.spectra.notcombine = [...
                    ad.combine.spectra.notcombine ...
                    ad.combine.spectra.combine];
                ad.combine.spectra.combine = [];
                setappdata(mainWindow,'combine',ad.combine);
                updateSpectra();
                updateLabel();
            case 'Sort'
                ad.combine.spectra.notcombine = ...
                    sort(ad.combine.spectra.notcombine);
                ad.combine.spectra.combine = ...
                    sort(ad.combine.spectra.combine);
                setappdata(mainWindow,'combine',ad.combine);
                updateSpectra();
            case 'Combine'
                if isempty(ad.combine.spectra.combine)
                    return;
                end
                % And here has to go the real stuff
                [combinedDataset,status] = TAcombine(...
                    ad.data(ad.combine.spectra.combine),...
                    'Label',ad.combine.label);
                if isempty(combinedDataset)
                    msgbox(status,'An error occurred','Error','modal');
                    return;
                end
                status = appendDatasetToMainGUI(...
                    combinedDataset,'modified',true);
                if status
                    disp('Hmm... some problems with appending combined dataset to main GUI.');
                end
                status = removeDatasetFromMainGUI(...
                    ad.combine.spectra.combine,'Force',true);
                if status
                    disp('Hmm... some problems with removing dataset(s) from main GUI.');
                end
                % After successful update of main GUI, refresh GUI data
                mainGuiWindow = guiGetWindowHandle();
                adMain = getappdata(mainGuiWindow);
                ad.data = adMain.data;
                setappdata(hMainFigure,'data',ad.data);
                ad.origdata = adMain.data;
                setappdata(hMainFigure,'origdata',ad.origdata);
                updateFileformats()
                updateBasenames();
                updateSpectra();
                updateLabel();
                % Bring combine GUI to fromt
                TAgui_combinewindow();
            case 'Close'
                msgStr = 'combine GUI window closed.';
                add2status(msgStr);

                % Look for combine GUI Help window and if its there, close as
                % well
                hHelpWindow = guiGetWindowHandle('TAgui_combine_helpwindow');
                if ishandle(hHelpWindow)
                    delete(hHelpWindow);
                end
                delete(guiGetWindowHandle(mfilename));
            otherwise
                disp('TAgui_combinewindow: pushbutton_Callback(): Unknown action');
                disp(action);
                return;
        end
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            TAgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function togglebutton_Callback(source,~,action)
    try
        if isempty(action)
            return;
        end
        
        % Get appdata of main window
        mainWindow = guiGetWindowHandle(mfilename);
        ad = getappdata(mainWindow);

        % Get state of toggle button
        value = get(source,'Value');
        
        % For those togglebuttons who do more complicated stuff
        % Toggle button
        if value % If toggle switched ON
            switch lower(action)
                case 'zoom'
                    % Reset pointer callback functions
                    set(hMainFigure,'WindowButtonMotionFcn','');
                    set(hMainFigure,'WindowButtonDownFcn','');
                    % Reset other zoom toggle button
                    zoom(hMainFigure,'on');
                    return;
                otherwise
                    disp(['TAgui_combine_settingswindow: ' ...
                        'togglebutton_Callback(): Unknown action '...
                        '"' action '"']);
                    return;
            end
        else % If toggle button switched OFF
            switch lower(action)
                case 'zoom'
                    zoom(hMainFigure,'off');
                    return;
                otherwise
                    disp(['TAgui_combine_settingswindow: ' ...
                        'togglebutton_Callback(): Unknown action '...
                        '"' action '"']);
                    return;
            end
        end
        
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            trEPRgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function popupmenu_Callback(source,~,action)
    try
        if isempty(action)
            return;
        end
        
        % Get appdata of main window
        mainWindow = guiGetWindowHandle(mfilename);
        ad = getappdata(mainWindow);
        
        values = cellstr(get(source,'String'));
        value = values{get(source,'Value')};
        
        switch lower(action)
            case 'scalingmethod'
                switch value
                    case 'time avg'
                        set(pp2,'Visible','on');
                        set(pp3,'Visible','off');
                    case 'min(diff)'
                        set(pp3,'Visible','on');
                        set(pp2,'Visible','off');
                    otherwise
                        return;
                end
            otherwise
                return;
        end
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            TAgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

function keypress_Callback(src,evt)
    try
        if isempty(evt.Character) && isempty(evt.Key)
            % In case "Character" is the empty string, i.e. only modifier key
            % was pressed...
            return;
        end
        mainWindow = guiGetWindowHandle(mfilename);
        % Get appdata from combine GUI
        ad = getappdata(mainWindow);

        if ~isempty(evt.Modifier)
            if (strcmpi(evt.Modifier{1},'command')) || ...
                    (strcmpi(evt.Modifier{1},'control'))
                switch evt.Key
                    case 'w'
                        pushbutton_Callback(src,evt,'Close')
                        return;
                end
            end
        end
        switch evt.Key
            case 'f1'
                TAgui_combine_helpwindow();
                return;
            otherwise
%                 disp(evt);
%                 fprintf('       Caller: %i\n\n',src);
                return;
        end
    catch exception
        try
            msgStr = ['An exception occurred. '...
                'The bug reporter should have been opened'];
            add2status(msgStr);
        catch exception2
            exception = addCause(exception2, exception);
            disp(msgStr);
        end
        try
            TAgui_bugreportwindow(exception);
        catch exception3
            % If even displaying the bug report window fails...
            exception = addCause(exception3, exception);
            throw(exception);
        end
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Utility functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function updateSpectra()
    try
        mainWindow = guiGetWindowHandle(mfilename);
        % Get appdata of combine GUI
        ad = getappdata(mainWindow);
        
        % Get handles of combine GUI
        gh = guihandles(mainWindow);
        
        % Get not to combine datasets and display in respective listbox
        [~,filebasenames,fileexts] = cellfun(@(x) fileparts(x.file.name),...
            ad.data(ad.combine.spectra.notcombine),...
            'UniformOutput',false);
        fileNames = cell(0);
        for k=1:length(filebasenames)
            fileNames{k} = [filebasenames{k} fileexts{k}];
        end
        set(gh.notcombine_listbox,'String',fileNames);
        if (get(gh.notcombine_listbox,'Value')>length(fileNames))
            if isempty(fileNames)
                set(gh.notcombine_listbox,'Value',1);
            else
                set(gh.notcombine_listbox,'Value',length(fileNames));
            end
        end
        if ~(get(gh.notcombine_listbox,'Value'))
            set(gh.notcombine_listbox,'Value',1);
        end
        
        % Get to combine datasets and display in respective listbox
        [~,filebasenames,fileexts] = cellfun(@(x) fileparts(x.file.name),...
            ad.data(ad.combine.spectra.combine),...
            'UniformOutput',false);
        fileNames = cell(0);
        for k=1:length(filebasenames)
            fileNames{k} = [filebasenames{k} fileexts{k}];
        end
        set(gh.combine_listbox,'String',fileNames);        
        if (get(gh.combine_listbox,'Value')>length(fileNames))
            if isempty(fileNames)
                set(gh.combine_listbox,'Value',1);
                updateLabel();
            else
                set(gh.combine_listbox,'Value',length(fileNames));
            end
        end
        if ~(get(gh.combine_listbox,'Value'))
            set(gh.combine_listbox,'Value',1);
        end
    catch exception
        try
            msgstr = ['an exception occurred. '...
                'the bug reporter should have been opened'];
            add2status(msgstr);
        catch exception2
            exception = addcause(exception2, exception);
            disp(msgstr);
        end
        try
            TAgui_bugreportwindow(exception);
        catch exception3
            % if even displaying the bug report window fails...
            exception = addcause(exception3, exception);
            throw(exception);
        end
    end
end

function updateLabel()
    try
        mainWindow = guiGetWindowHandle(mfilename);
        % Get appdata of combine GUI
        ad = getappdata(mainWindow);
        
        % Get handles of combine GUI
        gh = guihandles(mainWindow);
        
        if isempty(get(gh.combine_listbox,'String'))
            ad.combine.label = '';
        elseif isempty(ad.combine.label)
            ad.combine.label = ad.data{ad.combine.spectra.combine(...
                get(gh.combine_listbox,'Value'))}.label;
        end

        set(gh.label_edit,'String',ad.combine.label);
        setappdata(mainWindow,'combine',ad.combine);

    catch exception
        try
            msgstr = ['an exception occurred. '...
                'the bug reporter should have been opened'];
            add2status(msgstr);
        catch exception2
            exception = addcause(exception2, exception);
            disp(msgstr);
        end
        try
            TAgui_bugreportwindow(exception);
        catch exception3
            % if even displaying the bug report window fails...
            exception = addcause(exception3, exception);
            throw(exception);
        end
    end
end

end