function status = update_MFEPanel()
% UPDATE_MFEPANEL Helper function that updates the MFE panel
%   of the TA GUI.
%
%   STATUS: return value for the exit status
%           -1: no tEPR_gui_mainwindow found
%            0: successfully updated main axis

% (c) 2012-13, Till Biskup
% 2013-11-15

% Is there currently a TAgui object?
mainWindow = TAguiGetWindowHandle();
if (isempty(mainWindow))
    status = -1;
    return;
end

% Get handles from main window
gh = guidata(mainWindow);

% Get appdata from main GUI
ad = getappdata(mainWindow);

% Toggle "Highlight active"
if isempty(ad.control.axis.highlight.method)
    set(gh.mfe_highlight_checkbox,'Value',0);
else
    set(gh.mfe_highlight_checkbox,'Value',1);
end

% Make life easier
active = ad.control.spectra.active;

% Return immediately if there is no active dataset
if active == 0
    return;
end

% Define available line styles
lineStyles = {...
    'solid','-'; ...
    'dashed','--'; ...
    'dotted',':'; ...
    'dash-dotted','-.'; ...
    'none','none' ...
    };

% Define available line marker
lineMarker = {...
    'none','none'; ...
    'plus','+'; ...
    'circle','o'; ...
    'asterisk','*'; ...
    'point','.'; ...
    'cross','x'; ...
    'square','s'; ...
    'diamond','d'; ...
    'triangle up','^'; ...
    'triangle down','v'; ...
    'triangle right','<'; ...
    'triangle left','>'; ...
    'pentagram','p'; ...
    'hexagram','h' ...
    };

% Get line type currently selected (MFoff/MFon/DeltaMF)
MFElines = cellstr(get(gh.mfe_line_popupmenu,'String'));
MFEline = MFElines{get(gh.mfe_line_popupmenu,'Value')};

% Get values of line style popupmenu
lineStyleValues = cellstr(get(gh.mfe_linestyle_popupmenu,'String'));

% Get values of line marker popupmenu
lineMarkerValues = cellstr(get(gh.mfe_linemarker_popupmenu,'String'));

switch MFEline
    case 'MFoff'
        % Set colour sample
        set(gh.mfe_coloursample_text,'BackgroundColor',...
            ad.data{active}.line.color);
        % Set line width
        set(gh.mfe_linewidth_popupmenu,'Value',...
            ad.data{active}.line.width);
        % Set line style
        set(gh.mfe_linestyle_popupmenu,'Value',...
            find(strcmpi(lineStyles{strcmpi(ad.data{active}.line.style,...
            lineStyles(:,2)),1},lineStyleValues)));
        % Set line marker type
        set(gh.mfe_linemarker_popupmenu,'Value',...
            find(strcmpi(lineMarker{strcmpi(ad.data{active}.line.marker.type,...
            lineMarker(:,2)),1},lineMarkerValues)));
        % Set line marker edge colour
        lineMarkerEdgeColor = ad.data{active}.line.marker.edgeColor;
        lineMarkerEdgeColorPopupmenuValues = ...
            cellstr(get(gh.mfe_markeredgecolour_popupmenu,'String'));
        if ischar(lineMarkerEdgeColor) && length(lineMarkerEdgeColor)>1
            set(gh.mfe_markeredgecolour_popupmenu,'Value',...
                find(strcmpi(lineMarkerEdgeColor,...
                lineMarkerEdgeColorPopupmenuValues)));
            switch lineMarkerEdgeColor
                case 'none'
                    set(gh.mfe_markeredgecoloursample_text,...
                        'BackgroundColor',get(mainWindow,'Color'))
                case 'auto'
                    set(gh.mfe_markeredgecoloursample_text,...
                        'BackgroundColor',ad.data{active}.line.color);
            end
        else
            set(gh.mfe_markeredgecolour_popupmenu,'Value',...
                find(strcmpi('colour',lineMarkerEdgeColorPopupmenuValues)));
            set(gh.mfe_markeredgecoloursample_text,...
                'BackgroundColor',ad.data{active}.line.marker.edgeColor);
        end
        % Set line marker face colour
        lineMarkerFaceColor = ad.data{active}.line.marker.faceColor;
        lineMarkerFaceColorPopupmenuValues = ...
            cellstr(get(gh.mfe_markerfacecolour_popupmenu,'String'));
        if ischar(lineMarkerFaceColor) && length(lineMarkerFaceColor)>1
            set(gh.mfe_markerfacecolour_popupmenu,'Value',...
                find(strcmpi(lineMarkerFaceColor,...
                lineMarkerFaceColorPopupmenuValues)));
            switch lineMarkerFaceColor
                case 'none'
                    set(gh.mfe_markerfacecoloursample_text,...
                        'BackgroundColor',get(mainWindow,'Color'))
                case 'auto'
                    set(gh.mfe_markerfacecoloursample_text,...
                        'BackgroundColor',get(gca,'Color'));
            end
        else
            set(gh.mfe_markerfacecolour_popupmenu,'Value',...
                find(strcmpi('colour',lineMarkerFaceColorPopupmenuValues)));
            set(gh.mfe_markerfacecoloursample_text,...
                'BackgroundColor',ad.data{active}.line.marker.faceColor);
        end
        % Set line marker size
        set(gh.mfe_markersize_edit,'String',...
            num2str(ad.data{active}.line.marker.size));
    case 'MFon'
        % Set colour sample
        set(gh.mfe_coloursample_text,'BackgroundColor',...
            ad.data{active}.display.MFon.line.color)
        % Set line width
        set(gh.mfe_linewidth_popupmenu,'Value',...
            ad.data{active}.display.MFon.line.width);
        % Set line style
        set(gh.mfe_linestyle_popupmenu,'Value',...
            find(strcmpi(lineStyles{...
            strcmpi(ad.data{active}.display.MFon.line.style,...
            lineStyles(:,2)),1},lineStyleValues)));
        % Set line marker type
        set(gh.mfe_linemarker_popupmenu,'Value',...
            find(strcmpi(lineMarker{...
            strcmpi(ad.data{active}.display.MFon.line.marker.type,...
            lineMarker(:,2)),1},lineMarkerValues)));
        % Set line marker edge colour
        lineMarkerEdgeColor = ...
            ad.data{active}.display.MFon.line.marker.edgeColor;
        lineMarkerEdgeColorPopupmenuValues = ...
            cellstr(get(gh.mfe_markeredgecolour_popupmenu,'String'));
        if ischar(lineMarkerEdgeColor) && length(lineMarkerEdgeColor)>1
            set(gh.mfe_markeredgecolour_popupmenu,'Value',...
                find(strcmpi(lineMarkerEdgeColor,...
                lineMarkerEdgeColorPopupmenuValues)));
            switch lineMarkerEdgeColor
                case 'none'
                    set(gh.mfe_markeredgecoloursample_text,...
                        'BackgroundColor',get(mainWindow,'Color'))
                case 'auto'
                    set(gh.mfe_markeredgecoloursample_text,...
                        'BackgroundColor',...
                        ad.data{active}.display.MFon.line.color);
            end
        else
            set(gh.mfe_markeredgecolour_popupmenu,'Value',...
                find(strcmpi('colour',lineMarkerEdgeColorPopupmenuValues)));
            set(gh.mfe_markeredgecoloursample_text,...
                'BackgroundColor',...
                ad.data{active}.display.MFon.line.marker.edgeColor);
        end
        % Set line marker face colour
        lineMarkerFaceColor = ad.data{active}.display.MFon.line.marker.faceColor;
        lineMarkerFaceColorPopupmenuValues = ...
            cellstr(get(gh.mfe_markerfacecolour_popupmenu,'String'));
        if ischar(lineMarkerFaceColor) && length(lineMarkerFaceColor)>1
            set(gh.mfe_markerfacecolour_popupmenu,'Value',...
                find(strcmpi(lineMarkerFaceColor,...
                lineMarkerFaceColorPopupmenuValues)));
            switch lineMarkerFaceColor
                case 'none'
                    set(gh.mfe_markerfacecoloursample_text,...
                        'BackgroundColor',get(mainWindow,'Color'))
                case 'auto'
                    set(gh.mfe_markerfacecoloursample_text,...
                        'BackgroundColor',get(gca,'Color'));
            end
        else
            set(gh.mfe_markerfacecolour_popupmenu,'Value',...
                find(strcmpi('colour',lineMarkerFaceColorPopupmenuValues)));
            set(gh.mfe_markerfacecoloursample_text,...
                'BackgroundColor',...
                ad.data{active}.display.MFon.line.marker.faceColor);
        end
        % Set line marker size
        set(gh.mfe_markersize_edit,'String',...
            num2str(ad.data{active}.display.MFon.line.marker.size));
    case 'DeltaMF'
        % Set colour sample
        set(gh.mfe_coloursample_text,'BackgroundColor',...
            ad.data{active}.display.DeltaMF.line.color)
        % Set line width
        set(gh.mfe_linewidth_popupmenu,'Value',...
            ad.data{active}.display.DeltaMF.line.width);
        % Set line style
        set(gh.mfe_linestyle_popupmenu,'Value',...
            find(strcmpi(lineStyles{strcmpi(...
            ad.data{active}.display.DeltaMF.line.style,...
            lineStyles(:,2)),1},lineStyleValues)));
        % Set line marker type
        set(gh.mfe_linemarker_popupmenu,'Value',...
            find(strcmpi(lineMarker{...
            strcmpi(ad.data{active}.display.DeltaMF.line.marker.type,...
            lineMarker(:,2)),1},lineMarkerValues)));
        % Set line marker edge colour
        lineMarkerEdgeColor = ...
            ad.data{active}.display.DeltaMF.line.marker.edgeColor;
        lineMarkerEdgeColorPopupmenuValues = ...
            cellstr(get(gh.mfe_markeredgecolour_popupmenu,'String'));
        if ischar(lineMarkerEdgeColor) && length(lineMarkerEdgeColor)>1
            set(gh.mfe_markeredgecolour_popupmenu,'Value',...
                find(strcmpi(lineMarkerEdgeColor,...
                lineMarkerEdgeColorPopupmenuValues)));
            switch lineMarkerEdgeColor
                case 'none'
                    set(gh.mfe_markeredgecoloursample_text,...
                        'BackgroundColor',get(mainWindow,'Color'))
                case 'auto'
                    set(gh.mfe_markeredgecoloursample_text,...
                        'BackgroundColor',...
                        ad.data{active}.display.DeltaMF.line.color);
            end
        else
            set(gh.mfe_markeredgecolour_popupmenu,'Value',...
                find(strcmpi('colour',lineMarkerEdgeColorPopupmenuValues)));
            set(gh.mfe_markeredgecoloursample_text,...
                'BackgroundColor',...
                ad.data{active}.display.DeltaMF.line.marker.edgeColor);
        end
        % Set line marker face colour
        lineMarkerFaceColor = ...
            ad.data{active}.display.DeltaMF.line.marker.faceColor;
        lineMarkerFaceColorPopupmenuValues = ...
            cellstr(get(gh.mfe_markerfacecolour_popupmenu,'String'));
        if ischar(lineMarkerFaceColor) && length(lineMarkerFaceColor)>1
            set(gh.mfe_markerfacecolour_popupmenu,'Value',...
                find(strcmpi(lineMarkerFaceColor,...
                lineMarkerFaceColorPopupmenuValues)));
            switch lineMarkerFaceColor
                case 'none'
                    set(gh.mfe_markerfacecoloursample_text,...
                        'BackgroundColor',get(mainWindow,'Color'))
                case 'auto'
                    set(gh.mfe_markerfacecoloursample_text,...
                        'BackgroundColor',get(gca,'Color'));
            end
        else
            set(gh.mfe_markerfacecolour_popupmenu,'Value',...
                find(strcmpi('colour',lineMarkerFaceColorPopupmenuValues)));
            set(gh.mfe_markerfacecoloursample_text,...
                'BackgroundColor',...
                ad.data{active}.display.DeltaMF.line.marker.faceColor);
        end
        % Set line marker size
        set(gh.mfe_markersize_edit,'String',...
            num2str(ad.data{active}.display.DeltaMF.line.marker.size));
    otherwise
        disp(['TAgui : update_MFEPanel() : Unknown MFElineType '...
            '"' MFEline '"']);
end        

% Update display type popupmenu
% displayTypes = cellstr(get(gh.data_panel_displaytype_popupmenu,'String'));
% for k=1:length(displayTypes)
%     if strcmp(displayTypes(k),ad.control.axis.displayType)
%         set(gh.data_panel_displaytype_popupmenu,'Value',k)
%     end
% end

status = 0;

end